name: Terraform Plan
description: Common steps for Terraform validation and plan
inputs:
  arm-client-id:
    description: Azure client id
    required: true
  arm-tenant-id:
    description: Azure tenant id
  environment:
    description: Environment
    required: true
  tf-root-dir:  # id of input
    description: 'Terraform root directory'
    required: true
    default: ${{ github.workspace }}
  tf-paralellism:
    description: 'Terraform parallelism'
    required: false
    default: '50'
  tf-version:
    description: Terraform version
    required: true
  tflint-version:
    description: TFLint version
    required: false
    default: latest
outputs:
  random-number:
    description: "Random number"
    value: ${{ steps.random-number-generator.outputs.random-id }}
runs:
  using: composite
  steps:
  - uses: hashicorp/setup-terraform@v2
    with:
      terraform_version: ${{ inputs.tf-version}}

  - uses: terraform-linters/setup-tflint@v2
    with:
      tflint_version: ${{ inputs.tflint-version }}

  - name: Terraform init
    run: |
      terraform init  -input=false
    working-directory: ${{ inputs.tf-root-dir }}
    env:
      ARM_CLIENT_ID: ${{ inputs.arm-client-id }}
      ARM_TENANT_ID: ${{ inputs.arm-tenant-id }}
    shell: bash

  - name: Terraform validate
    run: |
      terraform validate
    working-directory: ${{ inputs.tf-root-dir }}
    shell: bash

  - name: Terraform fmt check
    run: |
      terraform fmt -check
    working-directory: ${{ inputs.tf-root-dir }}
    shell: bash

  - name: Tflint init
    run: |
      tflint --init
    working-directory: ${{ inputs.tf-root-dir }}
    shell: bash

  - name: Tflint
    run: |
      tflint
    working-directory: ${{ inputs.tf-root-dir }}
    shell: bash

  - name: Terraform plan
    id: plan
    run: |
      terraform plan \
        -input=false \
        -out=tfplan \
        -detailed-exitcode \
        -parallelism=${{ inputs.tf-paralellism }}
    continue-on-error: true
    working-directory: ${{ inputs.tf-root-dir }}
    env:
      ARM_CLIENT_ID: ${{ inputs.arm-client-id }}
      ARM_TENANT_ID: ${{ inputs.arm-tenant-id }}
      ARM_USE_OIDC: 'true'
    shell: bash

  - name: Check for plan error
    run: |
      echo "Terraform plan exit code was '1' - review previous step"
      exit 1
    if: always() && steps.plan.outputs.exitcode == '1'
    shell: bash

  - name: Terraform show
    run: |
      terraform show -json tfplan > tfplan.json
    if: steps.plan.outputs.exitcode == '2'
    working-directory: ${{ inputs.tf-root-dir }}
    shell: bash

  - name: Upload artifact
    uses: actions/upload-artifact@v2
    with:
      name: tfplan
      path: |
        ${{ github.workspace }}
        !${{ github.workspace }}/.git/**
    if: steps.plan.outputs.exitcode == '2'

  # - name: Comment PR with plan summary
  #   run: |
  #     ${{ github.workspace}}/scripts/TerraformAnnotate.ps1 -JsonPlanPath ./tfplan.json
  #   shell: pwsh
  #   working-directory: ${{ inputs.tf-root-dir }}
